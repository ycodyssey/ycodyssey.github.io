[{"title":"工具集","url":"/posts/3498028646.html","content":"<p>\n        <img class=\"lazyload lazyload-gif\" src=\"/images/loading.gif\" data-src=\"https://cdn.pixabay.com/photo/2024/01/07/11/17/welsh-corgi-8492879_640.jpg\" alt=\"img\">\n      <br><strong>放置一些我个人喜欢用的一些工具</strong></p>\n<span id=\"more\"></span>\n\n        <h1 id=\"Typst-平替Latex的新一代工具\">\n          <a href=\"#Typst-平替Latex的新一代工具\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#Typst-平替Latex的新一代工具\" class=\"headerlink\" title=\"Typst 平替Latex的新一代工具\"></a>Typst 平替Latex的新一代工具</h1>\n      <ul>\n<li><span class=\"exturl\"><a class=\"exturl__link\" href=\"https://typst-doc-cn.github.io/guide/quick-start.html\">中文社区导航</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n<li><span class=\"exturl\"><a class=\"exturl__link\" href=\"https://typst.app/\">官网使用Typst</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n<li><span class=\"exturl\"><a class=\"exturl__link\" href=\"https://typst-doc-cn.github.io/docs/tutorial/writing-in-typst/\">中文教程</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></li>\n<li><span class=\"exturl\"><a class=\"exturl__link\" href=\"https://typst.app/docs/\">官网教程-英文</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span><blockquote>\n<p>使用方式除了官网编辑器之外，还可以用Vscode安装插件<strong>Tinymistt Typst</strong>进行写作<br>此外Chrome浏览器在浏览Typst官网的时候在地址栏提供下载，可以安装到本地使用。<br>Typst听说是两个德国人被Latex折磨的不行之后自己发明出来的，是优秀的排版工具<br>我是为了写简历才学习使用的，此外还可以用来写论文一类的规范文件。</p>\n</blockquote>\n</li>\n</ul>\n","categories":["工具"],"tags":["tools"]},{"title":"MySQL","url":"/posts/3259397556.html","content":"<img class=\"lazyload lazyload-gif\" src=\"/images/loading.gif\" data-src=\"/posts/3259397556/file-20241023133230490.png\">\n      \n\n<p><strong>MySQL相关知识总结</strong></p>\n<span id=\"more\"></span>\n\n        <h1 id=\"如何处理-mysql-的死锁问题\">\n          <a href=\"#如何处理-mysql-的死锁问题\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#如何处理-mysql-的死锁问题\" class=\"headerlink\" title=\"如何处理 mysql 的死锁问题\"></a>如何处理 mysql 的死锁问题</h1>\n      <p><span class=\"exturl\"><a class=\"exturl__link\" href=\"https://xie.infoq.cn/article/71b956f9467eddb8c352bada1\"># 如何处理 mysql 的死锁问题</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></p>\n","categories":["数据库","MySQL"],"tags":["MySQL","数据库"]},{"title":"高等数学笔记","url":"/posts/421185607.html","content":"<img class=\"lazyload lazyload-gif\" src=\"/images/loading.gif\" data-src=\"/posts/421185607/file-20241023100726806.png\">\n      \n\n<p><strong>记录高等数学学习过程中的疑惑点</strong></p>\n<span id=\"more\"></span>\n\n        <h1 id=\"二阶线性微分方程\">\n          <a href=\"#二阶线性微分方程\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#二阶线性微分方程\" class=\"headerlink\" title=\"二阶线性微分方程\"></a>二阶线性微分方程</h1>\n      <p>二阶线性微分方程是<strong>一类特殊的微分方程，其未知函数及其一阶、二阶导数都是一次方的</strong>。这类方程在数学和物理学中有广泛的应用。以下是对二阶线性微分方程的详细解析：</p>\n<ol>\n<li><p><strong>基本形式</strong>：二阶线性微分方程的标准形式为y’’+p(x)y’+q(x)y=f(x)，其中p(x), q(x), f(x)在某区间上连续[^1^]。当f(x)=0时，该方程称为齐次方程；当f(x)≠0时，称为非齐次方程[^2^]。</p>\n</li>\n<li><p><strong>解的结构</strong>：对于二阶线性微分方程，其解通常包含两个独立的任意常数，这意味着解不是唯一的[^1^]。对于初值问题，如给定初始条件y(x_0)=y_0, y’(x_0)=y_1，则在x_0的邻域内存在唯一的解[^1^]。</p>\n</li>\n<li><p><strong>求解方法</strong>：二阶线性微分方程的求解方式分为两类：一是二阶线性齐次微分方程，二是线性非齐次微分方程。齐次方程主要采用特征方程求解，而非齐次方程则在对应的齐次方程的通解上加上特解即为非齐次方程的通解[^2^]。</p>\n</li>\n<li><p><strong>特殊类型</strong>：二阶常系数线性微分方程是二阶线性微分方程的一种特殊形式，其中p和q为常数。这种类型的方程在工程技术及力学和物理学中有广泛的应用[^3^]。其求解方法包括待定系数法、多项式法、常数变易法和微分算子法等[^3^]。</p>\n</li>\n<li><p><strong>应用实例</strong>：二阶线性微分方程在许多实际问题中都有应用，如振动问题、热传导问题等。例如，简谐振子的位移随时间的变化可以用二阶线性微分方程来描述[^3^]。</p>\n</li>\n</ol>\n<p>综上所述，二阶线性微分方程不仅是数学理论的重要组成部分，也是解决实际问题的强大工具。通过掌握其基本形式、解的结构、求解方法以及特殊类型，可以更好地理解和应用这一重要的数学概念。</p>\n<hr>\n<p><strong>二阶线性微分方程中的“二阶”指的是微分方程中未知函数的最高导数是二阶导数</strong>。</p>\n<p>二阶导数在数学分析中表示函数变化的加速度，即速度的变化率。在物理问题中，这通常与物体的加速度相关联。例如，在简谐振子模型中，位移随时间的变化可以通过二阶导数来描述，反映了物体受力与其加速度之间的关系[^3^]。</p>\n<p>二阶线性微分方程的标准形式为y’’+p(x)y’+q(x)y=f(x)，其中y’’代表未知函数y关于变量x的二阶导数。这种形式的方程在物理学和工程学中有广泛的应用，如在振动分析、电路理论等领域[^1^][^2^]。</p>\n<hr>\n<p><strong>二阶线性微分方程中的“线性”意味着微分方程中未知函数及其导数都是一次方的</strong>。</p>\n<p>具体来说，这意味着在方程中，未知函数（通常表示为y）和其一阶导数（y’）、二阶导数（y’’）都以一次幂的形式出现。这种形式的方程称为线性微分方程[^1^][^2^]。</p>\n<p>在线性微分方程中，未知函数及其各阶导数作为整体的一次幂，不包含这些变量的高次幂或它们之间的乘积[^2^]。例如，方程y’’+p(x)y’+q(x)y=f(x)中，y、y’和y’’都是一次方的，符合线性的定义[^1^]。</p>\n<p>总的来说，线性特性使得这类微分方程的求解过程具有特定的规律性和简便性，是数学和物理问题中常见的一种形式。</p>\n<hr>\n\n        <h1 id=\"虚数单位-i-的运算公式\">\n          <a href=\"#虚数单位-i-的运算公式\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#虚数单位-i-的运算公式\" class=\"headerlink\" title=\"虚数单位 i 的运算公式\"></a>虚数单位 i 的运算公式</h1>\n      <p>在数学中，关于虚数单位 ( i ) 的运算公式主要涉及四则运算、幂运算和三角函数等。以下是一些常见的公式：</p>\n<ol>\n<li><p><strong>加法</strong></p>\n<ul>\n<li><strong>公式</strong>：((a + bi) + (c + di) = (a + c) + (b + d)i)</li>\n<li><strong>解释</strong>：虚数相加时，分别将它们的实部和虚部相加[^1^][^2^]。</li>\n</ul>\n</li>\n<li><p><strong>减法</strong></p>\n<ul>\n<li><strong>公式</strong>：((a + bi) - (c + di) = (a - c) + (b - d)i)</li>\n<li><strong>解释</strong>：虚数相减时，分别将它们的实部和虚部相减[^1^][^2^]。</li>\n</ul>\n</li>\n<li><p><strong>乘法</strong></p>\n<ul>\n<li><strong>公式</strong>：((a + bi)(c + di) = ac + (ad + bc)i - bd)</li>\n<li><strong>解释</strong>：利用分配律展开后，再结合 (i^2 = -1) 进行化简[^1^][^2^][^3^]。</li>\n</ul>\n</li>\n<li><p><strong>除法</strong></p>\n<ul>\n<li><strong>公式</strong>：(\\frac{a + bi}{c + di} = \\frac{ac + bd}{c^2 + d^2} + \\frac{bc - ad}{c^2 + d^2}i)</li>\n<li><strong>解释</strong>：首先将分子分母同时乘以分母的共轭复数，使分母变为实数，然后进行除法运算并化简[^1^][^2^][^3^]。</li>\n</ul>\n</li>\n<li><p><strong>幂运算</strong></p>\n<ul>\n<li><strong>公式</strong>：(i^2 = -1)，(i^3 = -i)，(i^4 = 1)，以此类推，形成一个周期为4的循环[^3^][^4^]。</li>\n<li><strong>解释</strong>：虚数单位 (i) 的幂运算具有周期性，每4次幂运算后回到原点。</li>\n</ul>\n</li>\n<li><p><strong>三角函数</strong></p>\n<ul>\n<li><strong>正弦函数</strong>：(\\sin(a + bi) = \\sin(a)\\cos(bi) + \\cos(a)\\sin(bi) = \\sin(a)\\cosh(b) + i\\sinh(b)\\cos(a))</li>\n<li><strong>余弦函数</strong>：(\\cos(a - bi) = \\cos(a)\\cos(bi) + \\sin(a)\\sin(bi) = \\cos(a)\\cosh(b) + i\\sinh(b)\\sin(a))</li>\n<li><strong>正切函数</strong>：(\\tan(a + bi) = \\frac{\\sin(a + bi)}{\\cos(a + bi)})</li>\n<li><strong>余切函数</strong>：(\\cot(a + bi) = \\frac{\\cos(a + bi)}{\\sin(a + bi)})</li>\n<li><strong>正割函数</strong>：(\\sec(a + bi) = \\frac{1}{\\cos(a + bi)})</li>\n<li><strong>余割函数</strong>：(\\csc(a + bi) = \\frac{1}{\\sin(a + bi)})</li>\n<li><strong>解释</strong>：这些三角函数公式将实数域的三角函数扩展到复数域，通过引入双曲函数来处理虚部[^2^][^4^]。</li>\n</ul>\n</li>\n<li><p><strong>复数模和共轭</strong></p>\n<ul>\n<li><strong>模</strong>：对于复数 (a + bi)，其模为 (\\sqrt{a^2 + b^2})。</li>\n<li><strong>共轭</strong>：复数 (a + bi) 的共轭复数为 (a - bi)。</li>\n<li><strong>解释</strong>：模用于表示复数的大小，共轭复数在复数的除法运算中有重要作用。</li>\n</ul>\n</li>\n</ol>\n<p>总的来说，这些公式构成了虚数单位 (i) 的基本运算框架，是理解和解决复数问题的基础。</p>\n<hr>\n\n        <h1 id=\"虚数和复数的区别\">\n          <a href=\"#虚数和复数的区别\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#虚数和复数的区别\" class=\"headerlink\" title=\"虚数和复数的区别\"></a>虚数和复数的区别</h1>\n      <p>虚数和复数是数学中两个重要的概念，它们在数系中具有不同的地位和作用。下面将详细分析虚数和复数的区别：</p>\n<ol>\n<li><strong>定义与表示</strong><ul>\n<li><strong>虚数</strong>：虚数定义为形如a+bi的数，其中a和b是实数，且b≠0，i² = -1[^3^]。虚数的实部a对应平面上的横轴，虚部b对应纵轴[^5^]。</li>\n<li><strong>复数</strong>：复数通常表示为a+bi的形式，其中a和b都是实数，i为虚数单位[^4^]。复数包括实数和虚数，当b=0时，复数即为实数；当a=0且b≠0时，复数称为纯虚数[^2^]。</li>\n</ul>\n</li>\n<li><strong>历史背景</strong><ul>\n<li><strong>虚数</strong>：虚数的概念由17世纪著名数学家笛卡尔创立，最初被认为是“虚构”的数字，后来发现虚数在解决代数方程中有重要作用[^3^]。</li>\n<li><strong>复数</strong>：复数的历史可以追溯到公元1世纪，希腊数学家海伦首次考虑了复数方根的问题。经过多个世纪的发展，复数逐渐被接受并广泛应用于数学、物理等领域[^4^]。</li>\n</ul>\n</li>\n<li><strong>运算规则</strong><ul>\n<li><strong>虚数</strong>：虚数的加法、乘法等运算遵循特定的规则，例如(a+bi)±(c+di)=(a±c)+(b±d)i，(a+bi)(c+di)=(ac-bd)+(ad+bc)i[^3^]。</li>\n<li><strong>复数</strong>：复数同样有加法、乘法等运算规则，但更为广泛。例如，复数的共轭、模等概念在虚数中并不适用[^4^]。</li>\n</ul>\n</li>\n<li><strong>几何意义</strong><ul>\n<li><strong>虚数</strong>：虚数可以在复平面上表示为点或向量，其实部和虚部分别对应横轴和纵轴[^5^]。</li>\n<li><strong>复数</strong>：复数不仅可以在复平面上表示为点，还可以通过极坐标形式表示，其实部和虚部构成复数的模和幅角[^4^]。</li>\n</ul>\n</li>\n<li><strong>应用领域</strong><ul>\n<li><strong>虚数</strong>：虚数在数学分析、物理学中有广泛应用，特别是在解决某些类型的方程和函数问题时[^1^]。</li>\n<li><strong>复数</strong>：复数的应用更加广泛，涵盖了工程学、信号处理、量子力学等多个领域。复数的理论为许多科学问题的解决提供了基础[^2^]。</li>\n</ul>\n</li>\n<li><strong>哲学意义</strong><ul>\n<li><strong>虚数</strong>：虚数的存在挑战了人们对数字的传统认知，它的引入拓宽了数学的边界[^3^]。</li>\n<li><strong>复数</strong>：复数不仅在数学上有重要地位，还在哲学上引发了对现实世界本质的思考。复数理论的发展促进了对数学抽象思维的理解[^4^]。</li>\n</ul>\n</li>\n</ol>\n<p>综上所述，虚数和复数在数学中各自扮演着不可或缺的角色。虚数作为复数的一部分，其独特的性质和应用在数学史上具有重要意义。复数则因其广泛的应用和深刻的理论价值，成为现代数学不可或缺的一部分。</p>\n<p><strong><span class=\"exturl\"><a class=\"exturl__link\" href=\"https://zhuanlan.zhihu.com/p/347136244\">虚数与复数与欧拉公式</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></strong></p>\n<hr>\n","categories":["数学","高数"],"tags":["高数","数学"]},{"title":"基础理论知识补充","url":"/posts/2782156371.html","content":"<img class=\"lazyload lazyload-gif\" src=\"/images/loading.gif\" data-src=\"/posts/2782156371/file-20241023081927058.png\">\n      \n\n<p><strong>补充在计算机基础学习过程中遇到的疑惑点</strong></p>\n<span id=\"more\"></span>\n\n        <h1 id=\"数据总线双向三态\">\n          <a href=\"#数据总线双向三态\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#数据总线双向三态\" class=\"headerlink\" title=\"数据总线双向三态\"></a>数据总线双向三态</h1>\n      <p><strong>数据总线双向三态是一种在计算机硬件中用于数据传输的机制，它允许数据在总线上进行双向传输，并且可以处于高阻态</strong>。以下是对数据总线双向三态的具体说明：</p>\n<ol>\n<li><p><strong>双向性</strong>：数据总线的双向性意味着它可以支持数据的双向流动。具体来说，数据既可以通过总线从CPU传送到其他设备（如存储器或I/O接口），也可以从这些设备传送回CPU。这种双向性使得数据总线非常灵活，能够适应多种不同的数据传输需求[^1^]。</p>\n</li>\n<li><p><strong>三态特性</strong>：三态是指总线可以处于三种不同的状态：高电平（逻辑“1”）、低电平（逻辑“0”）和高阻态（通常用符号Z表示）。高阻态是一种特殊状态，在这种状态下，总线既不输出高电平也不输出低电平，相当于与外部电路断开，不会影响到其他设备的正常工作[^3^][^4^]。</p>\n</li>\n<li><p><strong>使能控制</strong>：三态门通过一个使能信号（EN）来控制其输出状态。当使能信号为高电平时，三态门正常工作，输出高电平或低电平；当使能信号为低电平时，三态门输出高阻态。这种设计使得多个设备可以共享同一条总线而不会发生冲突[^4^]。</p>\n</li>\n<li><p><strong>应用场景</strong>：数据总线双向三态广泛应用于各种计算机系统中，特别是在需要频繁进行数据交换的场景中，如内存访问、I/O操作等。此外，在FPGA（现场可编程门阵列）设计中，双向IO口也常使用三态门来实现数据的双向传输[^2^][^5^]。</p>\n</li>\n</ol>\n<p>综上所述，数据总线双向三态是一种高效且灵活的数据传输机制，通过使能信号的控制，实现了数据的双向流动和高阻态输出，从而满足了复杂系统对数据传输的需求。</p>\n<hr>\n\n        <h1 id=\"通用寄存器\">\n          <a href=\"#通用寄存器\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#通用寄存器\" class=\"headerlink\" title=\"通用寄存器\"></a>通用寄存器</h1>\n      <p>通用寄存器是<strong>处理器中用于存储数据和参与算术逻辑运算的重要组件</strong>。以下是对通用寄存器的详细介绍：</p>\n<ol>\n<li><p><strong>基本概念</strong>：通用寄存器是CPU内部用于暂时存放数据、指令和地址的存储单元。它们的主要功能包括存储临时数据、计算过程中的中间结果，以及作为指针来访问内存地址[^1^]。</p>\n</li>\n<li><p><strong>主要作用</strong>：通用寄存器在计算机系统中扮演着核心角色。它们不仅用于存储数据和指令，还参与到几乎所有的算术和逻辑运算中。例如，加法、减法、乘法和除法等操作都可能需要通用寄存器的参与[^2^]。</p>\n</li>\n<li><p><strong>特殊功能</strong>：除了基本的存储和运算功能外，某些通用寄存器还具有特殊的用途。例如，在8086处理器中，AX寄存器通常被用作累加器，用于执行乘法和除法运算；BX寄存器则常被用作基址寄存器，用于存储内存地址；CX寄存器作为计数器，用于循环和位移操作；DX寄存器则用于I/O操作和乘除运算中的数据暂存[^4^]。</p>\n</li>\n<li><p><strong>分类</strong>：根据不同的处理器架构和设计，通用寄存器可以分为整数寄存器和浮点寄存器两大类。整数寄存器主要用于存储整数数据，而浮点寄存器则用于存储浮点数数据。此外，一些处理器还将通用寄存器设计为具有多个子寄存器或寄存器组的形式，以便更好地支持不同的数据类型和操作[^2^]。</p>\n</li>\n<li><p><strong>应用</strong>：在程序设计中，特别是汇编语言编程中，程序员需要熟悉每个通用寄存器的一般用途和特殊用途，以便在程序中做到正确、合理地使用它们。通过合理利用通用寄存器，可以提高程序的执行效率和性能[^1^][^2^]。</p>\n</li>\n</ol>\n<p>综上所述，通用寄存器在计算机系统中具有举足轻重的地位。它们不仅是数据存储和传输的关键工具，还是算术逻辑运算的核心参与者。</p>\n<hr>\n\n        <h1 id=\"定点运算器\">\n          <a href=\"#定点运算器\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#定点运算器\" class=\"headerlink\" title=\"定点运算器\"></a>定点运算器</h1>\n      <p><strong>定点运算器是一种专门用于执行定点数运算的硬件设备，广泛应用于计算机系统中进行数值计算和数据处理</strong>。以下是对定点运算器的详细介绍：</p>\n<ol>\n<li><strong>概念与应用</strong><ul>\n<li><strong>概念定义</strong>：定点运算器是计算机中的一种重要组成部分，主要用于处理定点数运算。它通过固定小数点位置的方式，对整数和小数部分进行处理[^1^]。</li>\n<li><strong>应用领域</strong>：定点运算器广泛应用于图像处理、音频处理、信号处理、通信系统以及嵌入式系统等领域。随着人工智能和深度学习技术的发展，定点运算器在神经网络模型的部署和推理过程中也发挥着重要作用[^1^]。</li>\n</ul>\n</li>\n<li><strong>基本组成</strong><ul>\n<li><strong>寄存器</strong>：寄存器用于存储操作数和运算结果，包括累加器和数据寄存器等[^1^][^5^]。</li>\n<li><strong>运算单元</strong>：运算单元负责执行各种算术运算，如加法、减法、乘法和除法等[^1^][^3^]。</li>\n<li><strong>控制逻辑</strong>：控制逻辑协调整个运算器的工作流程，控制操作数的输入输出和运算步骤的调度[^1^]。</li>\n</ul>\n</li>\n<li><strong>工作原理</strong><ul>\n<li><strong>操作数输入</strong>：将需要进行运算的定点数从外部输入到定点运算器的寄存器中[^1^]。</li>\n<li><strong>运算操作</strong>：根据指定的运算类型，通过运算单元计算出结果[^1^]。</li>\n<li><strong>结果输出</strong>：将运算得到的结果输出到指定的寄存器中，供后续的运算或输出到外部使用[^1^]。</li>\n</ul>\n</li>\n<li><strong>关键技术</strong><ul>\n<li><strong>乘法运算</strong>：定点运算器中的乘法运算需要考虑定点数的小数位取舍、溢出判断和乘法结果的精度保持等问题[^1^]。</li>\n<li><strong>加减运算</strong>：定点数的加减运算需要考虑进位和溢出的处理，以及结果的精度保持[^1^]。</li>\n</ul>\n</li>\n<li><strong>总线结构</strong><ul>\n<li><strong>单总线结构</strong>：所有部件都接到同一总线上，同一时间内只能有一个操作数放在单总线上[^3^][^5^]。</li>\n<li><strong>双总线结构</strong>：两条总线各自把数据送至ALU的输入端，两个操作数同时加到ALU进行计算[^3^][^5^]。</li>\n<li><strong>三总线结构</strong>：旁路器的作用是不通过ALU实现通用寄存器内的数据传输，速度最快[^3^][^5^]。</li>\n</ul>\n</li>\n<li><strong>性能优化</strong><ul>\n<li><strong>流水线技术</strong>：采用流水线技术可以提高定点运算器的处理速度和效率[^4^]。</li>\n<li><strong>位移技术</strong>：利用位移操作可以简化乘除法运算，提高运算速度[^4^]。</li>\n<li><strong>预测技术</strong>：通过预测技术可以减少运算延迟，提高定点运算器的性能[^4^]。</li>\n</ul>\n</li>\n<li><strong>设计原则</strong><ul>\n<li><strong>指令系统兼容性</strong>：定点运算器的设计需要与指令系统兼容，确保能够正确执行各种指令[^5^]。</li>\n<li><strong>机器字长考虑</strong>：机器字长决定了一次运算的位数和存储器的位数，影响定点运算器的设计[^5^]。</li>\n<li><strong>体系结构适应性</strong>：定点运算器的设计需要考虑整个计算机系统的体系结构，确保其与其他部件的协同工作[^5^]。</li>\n</ul>\n</li>\n</ol>\n<p>综上所述，定点运算器是计算机中不可或缺的组成部分，它在数值计算和数据处理方面发挥着重要作用。了解定点运算器的基本概念、组成、工作原理和技术特点，有助于更好地理解和应用这一重要的计算机组件。</p>\n<hr>\n\n        <h1 id=\"CPU内部的时钟频率\">\n          <a href=\"#CPU内部的时钟频率\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#CPU内部的时钟频率\" class=\"headerlink\" title=\"CPU内部的时钟频率\"></a>CPU内部的时钟频率</h1>\n      <p>在计算机领域，CPU的时钟频率是衡量其处理速度的一个重要指标。它代表了CPU每秒钟能够执行的周期数，这个数字越高，通常意味着CPU的运算能力越强。</p>\n\n        <h3 id=\"一、定义\">\n          <a href=\"#一、定义\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#一、定义\" class=\"headerlink\" title=\"一、定义\"></a>一、定义</h3>\n      <ul>\n<li><p><strong>基本概念</strong>：时钟频率是指振荡器产生的输入脉冲信号的频率，这个频率是同步电路工作的基准[^1^]。</p>\n</li>\n<li><p><strong>单位</strong>：时钟频率的单位是赫兹（Hz），表示每秒周期性变化的次数[^2^]。</p>\n</li>\n<li><p><strong>重要性</strong>：它是评定CPU性能的重要指标之一，因为时钟频率直接影响着CPU每秒可以执行的指令数[^3^]。</p>\n</li>\n</ul>\n\n        <h3 id=\"二、原因\">\n          <a href=\"#二、原因\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#二、原因\" class=\"headerlink\" title=\"二、原因\"></a>二、原因</h3>\n      <ul>\n<li><p><strong>命名由来</strong>：时钟频率之所以被称为“时钟”，是因为它就像时钟一样规律地摆动，为CPU提供稳定的工作节奏。CPU的所有操作都按照这个节奏进行，确保了指令的有序执行[^6^]。</p>\n</li>\n<li><p><strong>与时间的关系</strong>：时钟频率与时间紧密相关，它决定了CPU完成任务的速度。高频率意味着CPU可以在更短的时间内完成更多的工作[^7^]。</p>\n</li>\n<li><p><strong>技术实现</strong>：在技术上，CPU通过内部的时钟电路来产生和控制时钟频率。这个频率是通过晶体振荡器产生的，晶体振荡器根据其物理特性在特定条件下以固定频率振动，从而提供稳定的时钟信号[^9^]。</p>\n</li>\n<li><p><strong>发展历史</strong>：从早期的机械齿轮时钟到现代的电子振荡器，时钟技术的发展促进了现代计算机中时钟频率的应用。随着技术的进步，CPU的时钟频率也在不断提高，推动了计算机性能的提升[^10^]。</p>\n</li>\n<li><p><strong>与其他组件的关系</strong>：CPU的时钟频率不仅影响自身的运行速度，还影响与其他硬件组件的数据交换速率。例如，内存和外设也需要与CPU的时钟频率同步，以确保数据的正确传输[^11^]。</p>\n</li>\n<li><p><strong>性能限制因素</strong>：尽管时钟频率对CPU性能至关重要，但它并不是唯一的决定因素。CPU的架构、缓存大小、指令集等也会影响其最终性能[^3^]。</p>\n</li>\n<li><p><strong>能效考量</strong>：随着能源成本的上升和环境保护意识的增强，高时钟频率带来的高能耗问题不容忽视。因此，现代CPU设计中越来越注重能效比，即在提供高性能的同时降低能耗[^7^]。</p>\n</li>\n</ul>\n<p>综上所述，CPU的时钟频率不仅是衡量其性能的关键指标，也是整个计算机系统设计和优化的核心要素。了解时钟频率的定义和它为何被称为“时钟”，有助于深入理解现代计算机的工作原理和性能提升的途径。</p>\n<hr>\n\n        <h1 id=\"为什么Cache-不能由程序或者程序员访问是高速缓存的透明性\">\n          <a href=\"#为什么Cache-不能由程序或者程序员访问是高速缓存的透明性\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#为什么Cache-不能由程序或者程序员访问是高速缓存的透明性\" class=\"headerlink\" title=\"为什么Cache 不能由程序或者程序员访问是高速缓存的透明性\"></a>为什么Cache 不能由程序或者程序员访问是高速缓存的透明性</h1>\n      <p>好的，关于Cache（高速缓存）的透明性，以下是一些解释：</p>\n<ol>\n<li><p><strong>定义与概念</strong>：Cache的透明性指的是在计算机系统中，Cache的存在和操作对程序员来说是不可见的。这意味着程序员不需要直接管理或控制Cache，也不需要为了适应Cache的特性而修改程序代码。</p>\n</li>\n<li><p><strong>透明性的体现</strong>：Cache的管理完全由硬件自动完成，包括数据的读取、写入、替换等操作。这些操作对程序员是透明的，即程序员无法直接感知到这些操作的发生。由于Cache的存在，程序的执行速度得到了提升，但这种提升对程序员来说是“透明”的，即他们不需要为此付出额外的努力或编写额外的代码。</p>\n</li>\n<li><p><strong>透明性的意义</strong>：Cache的透明性简化了程序员的工作，使他们可以专注于编写程序逻辑，而无需关注底层的存储细节。同时，它也使得计算机系统能够更高效地利用资源，提高整体性能。</p>\n</li>\n<li><p><strong>与非透明Cache的区别</strong>：非透明Cache需要程序员显式地控制和管理Cache，这增加了编程的复杂性和难度。而透明Cache则通过硬件自动管理，减轻了程序员的负担。</p>\n</li>\n<li><p><strong>实现方式</strong>：Cache的透明性是通过硬件和操作系统的设计和优化来实现的。例如，现代CPU通常采用多级Cache结构，并通过复杂的替换策略和写回策略来优化Cache的性能。同时，操作系统也会提供相应的支持，以确保Cache的正确性和一致性。</p>\n</li>\n<li><p><strong>对程序员的影响</strong>：虽然Cache对程序员来说是透明的，但这并不意味着程序员可以完全忽略Cache的存在。了解Cache的工作原理和特性对于优化程序性能仍然是非常重要的。然而，在实际编程中，程序员通常不需要直接操作Cache，而是通过编写高效的代码来充分利用Cache的优势。</p>\n</li>\n<li><p><strong>发展趋势</strong>：随着计算机技术的不断发展，Cache的容量和速度都在不断提升，其透明性也在进一步增强。未来的计算机系统可能会采用更先进的Cache技术和算法，以进一步简化程序员的工作并提高系统性能。</p>\n</li>\n</ol>\n<p>综上所述，Cache的透明性是指其在计算机系统中的存在和操作对程序员来说是不可见的。这种透明性简化了程序员的工作，提高了系统性能，并推动了计算机技术的进步和发展。</p>\n<hr>\n\n        <h1 id=\"集成电路\">\n          <a href=\"#集成电路\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#集成电路\" class=\"headerlink\" title=\"集成电路\"></a>集成电路</h1>\n      <p><strong>集成电路的全称是Integrated Circuit，简称IC</strong>。</p>\n\n        <h2 id=\"电源管理、时钟生成\">\n          <a href=\"#电源管理、时钟生成\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#电源管理、时钟生成\" class=\"headerlink\" title=\"电源管理、时钟生成\"></a>电源管理、时钟生成</h2>\n      <p><strong>电源管理（Power Management）是指系统在运行过程中对电源的有效控制，以优化功耗和性能；时钟生成（Clock Generation）则涉及为系统各部分提供同步信号，确保它们按照正确的时序工作</strong>。以下是这两个概念的具体介绍：</p>\n<ol>\n<li><strong>电源管理</strong><ul>\n<li><strong>定义与目的</strong>：电源管理是指通过一系列技术和策略，有效控制和管理设备的电源消耗，以延长电池寿命、提高能效并降低运营成本。它涵盖了从硬件设计到软件实现的各个方面[^1^]。</li>\n<li><strong>主要技术</strong>：动态电压频率调节（DVFS）、自适应电压调整（AVS）、电源模式转换（如休眠模式、待机模式）等是现代电源管理中的常用技术。这些技术可以根据系统负载动态调整电源供应，减少不必要的能源浪费[^1^]。</li>\n<li><strong>应用场景</strong>：从个人电子设备（如智能手机、笔记本电脑）到数据中心的大型服务器系统，再到工业自动化和物联网设备，电源管理无处不在，对于提升设备续航能力、降低能耗具有重要意义[^1^]。</li>\n</ul>\n</li>\n<li><strong>时钟生成</strong><ul>\n<li><strong>定义与作用</strong>：时钟生成是指在数字系统中产生稳定、准确的时钟信号的过程。这些信号用于同步系统内各个组件的操作，确保数据处理和传输的准确性和一致性[^2^]。</li>\n<li><strong>关键技术</strong>：锁相环（PLL）、晶体振荡器（Crystal Oscillators）和时钟分配网络（Clock Distribution Networks, CDN）是实现高质量时钟信号的关键组件。PLL可以增加时钟频率的稳定性，而CDN负责将时钟信号分配给系统的各个部分[^2^]。</li>\n<li><strong>应用领域</strong>：从微处理器到FPGA，再到通信设备，时钟生成对于任何需要精确时间控制的数字系统都是必不可少的。特别是在高速数据传输和处理领域，高质量的时钟信号对于保证系统性能至关重要[^2^]。</li>\n</ul>\n</li>\n</ol>\n<p>综上所述，电源管理和时钟生成是现代电子系统中不可或缺的两大核心技术。它们分别从能源效率和时间准确性两个方面，共同支撑着系统的高效、稳定运行。</p>\n","categories":["专业课"],"tags":["计算机基础","理论知识"]},{"title":"Java知识手册","url":"/posts/1289796624.html","content":"<p>此处放一些个人收藏的技术网站，等待以后有时间自己沉淀技术博客文章</p>\n\n        <img class=\"lazyload lazyload-gif\" src=\"/images/loading.gif\" data-src=\"https://ts1.cn.mm.bing.net/th/id/R-C.dbeec56c40a11e2d565924419d09bd0d?rik=nKQu9UEzdcc0fQ&amp;riu=http%3a%2f%2fimg.pconline.com.cn%2fimages%2fphotoblog%2f5%2f4%2f7%2f3%2f5473189%2f20079%2f22%2f1190457784500.jpg&amp;ehk=W05yy%2fpka%2fE1IZtQAHQ1056Xxe1zHoqWfVNk1NNUFig%3d&amp;risl=&amp;pid=ImgRaw&amp;r=0\" style=\"\" alt=\"图片正在加载中\">\n      \n\n\n<span id=\"more\"></span>\n\n<p><strong><span class=\"exturl\"><a class=\"exturl__link\" href=\"https://www.yuque.com/vip6688/neho4x\">Java八股文</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></strong></p>\n<p><strong><span class=\"exturl\"><a class=\"exturl__link\" href=\"https://liaoxuefeng.com/books/java/introduction/index.html\">廖雪峰官方网站</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></strong></p>\n<p><strong><span class=\"exturl\"><a class=\"exturl__link\" href=\"https://mp.weixin.qq.com/mp/appmsgalbum?__biz=Mzg4MjU0OTM1OA==&amp;action=getalbum&amp;album_id=1664731708878848004&amp;scene=21#wechat_redirect\">精通JVM系列</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></strong></p>\n<p><strong><span class=\"exturl\"><a class=\"exturl__link\" href=\"https://www.cnkirito.moe/categories/\"> 徐靖峰|个人博客</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></strong></p>\n","categories":["Java"],"tags":["Java","面试","八股文"]},{"title":"Hexo使用手册","url":"/posts/1899991772.html","content":"<img class=\"lazyload lazyload-gif\" src=\"/images/loading.gif\" data-src=\"/posts/1899991772/file-20241023124012083.png\">\n      \n\n<span id=\"more\"></span>\n\n\n        <h1 id=\"Hexo文档\">\n          <a href=\"#Hexo文档\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#Hexo文档\" class=\"headerlink\" title=\"Hexo文档\"></a>Hexo文档</h1>\n      \n        <h3 id=\"Hexo中文文档\">\n          <a href=\"#Hexo中文文档\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#Hexo中文文档\" class=\"headerlink\" title=\"Hexo中文文档\"></a><strong><span class=\"exturl\"><a class=\"exturl__link\" href=\"https://hexo.io/zh-cn/docs/\">Hexo中文文档</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></strong></h3>\n      \n        <h3 id=\"STUM文档\">\n          <a href=\"#STUM文档\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#STUM文档\" class=\"headerlink\" title=\"STUM文档\"></a><span class=\"exturl\"><a class=\"exturl__link\" href=\"https://theme-stun.github.io/docs/zh-CN/guide/primary.html#%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95\">STUM文档</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></h3>\n      <hr>\n\n        <h1 id=\"Hexo分类多层级\">\n          <a href=\"#Hexo分类多层级\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#Hexo分类多层级\" class=\"headerlink\" title=\"Hexo分类多层级\"></a>Hexo分类多层级</h1>\n      <ol>\n<li><p><strong>父子分类</strong></p>\n<figure class=\"highlight plaintext\"><div class=\"table-container\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">categories:</span><br><span class=\"line\">- Diary</span><br><span class=\"line\">- Life</span><br></pre></td></tr></tbody></table></div></figure>\n<p>会使分类Life成为Diary的子分类，而不是并列分类</p>\n</li>\n<li><p><strong>并列+子分类</strong><br>为文章添加多个分类，尝试一下list的方法</p>\n<figure class=\"highlight plaintext\"><div class=\"table-container\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">categories:</span><br><span class=\"line\">- [Diary, PlayStation]</span><br><span class=\"line\">- [Diary, Games]</span><br><span class=\"line\">- [Life]</span><br></pre></td></tr></tbody></table></div></figure>\n<p>此时这篇文章同时包括三个分类： PlayStation 和 Games 分别都是父分类 Diary 的子分类，同时 Life 是一个没有子分类的分类</p>\n</li>\n</ol>\n<hr>\n\n        <h1 id=\"优秀Hexo示范\">\n          <a href=\"#优秀Hexo示范\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#优秀Hexo示范\" class=\"headerlink\" title=\"优秀Hexo示范\"></a>优秀Hexo示范</h1>\n      \n        <h5 id=\"Case-1-向往的博客\">\n          <a href=\"#Case-1-向往的博客\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#Case-1-向往的博客\" class=\"headerlink\" title=\"Case 1   向往的博客\"></a><span class=\"exturl\"><a class=\"exturl__link\" href=\"https://uuanqin.top/\">Case 1</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>   向往的博客</h5>\n      \n        <h5 id=\"Case-2-stum主题作者的\">\n          <a href=\"#Case-2-stum主题作者的\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#Case-2-stum主题作者的\" class=\"headerlink\" title=\"Case 2  stum主题作者的\"></a><span class=\"exturl\"><a class=\"exturl__link\" href=\"https://liuyib.github.io/\">Case 2</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>  stum主题作者的</h5>\n      \n        <h5 id=\"Case-3-路人\">\n          <a href=\"#Case-3-路人\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#Case-3-路人\" class=\"headerlink\" title=\"Case 3   路人\"></a><span class=\"exturl\"><a class=\"exturl__link\" href=\"https://zhangjichengcc.github.io/blog/\">Case 3</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>   路人</h5>\n      \n        <h5 id=\"Case-4-路人\">\n          <a href=\"#Case-4-路人\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#Case-4-路人\" class=\"headerlink\" title=\"Case 4  路人\"></a><span class=\"exturl\"><a class=\"exturl__link\" href=\"https://longtong666.github.io/blog/\">Case 4</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>  路人</h5>\n      \n        <h5 id=\"Case-5-清河的博客\">\n          <a href=\"#Case-5-清河的博客\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#Case-5-清河的博客\" class=\"headerlink\" title=\"Case 5  清河的博客\"></a><span class=\"exturl\"><a class=\"exturl__link\" href=\"https://lasonneil.github.io/\">Case 5</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span>  清河的博客</h5>\n      \n        <h5 id=\"Case6-君匡文集\">\n          <a href=\"#Case6-君匡文集\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#Case6-君匡文集\" class=\"headerlink\" title=\"Case6 君匡文集\"></a><span class=\"exturl\"><a class=\"exturl__link\" href=\"https://literature.junkuang.fun/\">Case6</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span> 君匡文集</h5>\n      <hr>\n\n        <h1 id=\"Formatter介绍\">\n          <a href=\"#Formatter介绍\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#Formatter介绍\" class=\"headerlink\" title=\"Formatter介绍\"></a>Formatter介绍</h1>\n      <div class=\"table-container\"><table>\n<thead>\n<tr>\n<th>属性名</th>\n<th>描述</th>\n<th>是否必需</th>\n<th>默认值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>title</td>\n<td>页面标题</td>\n<td>是</td>\n<td>-</td>\n</tr>\n<tr>\n<td>date</td>\n<td>页面创建日期</td>\n<td>是</td>\n<td>-</td>\n</tr>\n<tr>\n<td>type</td>\n<td>标签、分类和友情链接三个页面需要配置</td>\n<td>是</td>\n<td>-</td>\n</tr>\n<tr>\n<td>updated</td>\n<td>页面更新日期</td>\n<td>否</td>\n<td>-</td>\n</tr>\n<tr>\n<td>description</td>\n<td>页面描述</td>\n<td>否</td>\n<td>-</td>\n</tr>\n<tr>\n<td>keywords</td>\n<td>页面关键字</td>\n<td>否</td>\n<td>-</td>\n</tr>\n<tr>\n<td>comments</td>\n<td>显示页面评论模块（默认为true）</td>\n<td>否</td>\n<td>true</td>\n</tr>\n<tr>\n<td>top_img</td>\n<td>页面顶部图片</td>\n<td>否</td>\n<td>-</td>\n</tr>\n<tr>\n<td>mathjax</td>\n<td>显示mathjax（当设置mathjax的per_page: false时，才需要配置）</td>\n<td>否</td>\n<td>false</td>\n</tr>\n<tr>\n<td>katex</td>\n<td>显示katex（当设置katex的per_page: false时，才需要配置）</td>\n<td>否</td>\n<td>false</td>\n</tr>\n<tr>\n<td>aside</td>\n<td>显示侧边栏（默认为true）</td>\n<td>否</td>\n<td>true</td>\n</tr>\n<tr>\n<td>highlight_shrink</td>\n<td>配置代码框是否展开（true/false）（默认为设置中highlight_shrink的配置）</td>\n<td>否</td>\n<td>-</td>\n</tr>\n</tbody></table></div>\n<blockquote>\n<p>tips:以上这个表格的md是这样写的</p>\n</blockquote>\n<figure class=\"highlight js\"><div class=\"table-container\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">| 属性名       | 描述                                                         | 是否必需 | 默认值        |</span><br><span class=\"line\">|------------|------------------------------------------------------------|--------|-------------|</span><br><span class=\"line\">| title      | 页面标题                                                    | 是     | -           |</span><br><span class=\"line\">| date       | 页面创建日期                                                | 是     | -           |</span><br><span class=\"line\">| type       | 标签、分类和友情链接三个页面需要配置                          | 是     | -           |</span><br><span class=\"line\">| updated    | 页面更新日期                                                | 否     | -           |</span><br><span class=\"line\">| description| 页面描述                                                    | 否     | -           |</span><br><span class=\"line\">| keywords   | 页面关键字                                                  | 否     | -           |</span><br><span class=\"line\">| comments   | 显示页面评论模块（默认为<span class=\"literal\">true</span>）                               | 否     | <span class=\"literal\">true</span>        |</span><br><span class=\"line\">| top_img    | 页面顶部图片                                                | 否     | -           |</span><br><span class=\"line\">| mathjax    | 显示mathjax（当设置mathjax的<span class=\"attr\">per_page</span>: <span class=\"literal\">false</span>时，才需要配置）  | 否     | <span class=\"literal\">false</span>       |</span><br><span class=\"line\">| katex      | 显示katex（当设置katex的<span class=\"attr\">per_page</span>: <span class=\"literal\">false</span>时，才需要配置）      | 否     | <span class=\"literal\">false</span>       |</span><br><span class=\"line\">| aside      | 显示侧边栏（默认为<span class=\"literal\">true</span>）                                     | 否     | <span class=\"literal\">true</span>        |</span><br><span class=\"line\">| highlight_shrink | 配置代码框是否展开（<span class=\"literal\">true</span>/<span class=\"literal\">false</span>）（默认为设置中highlight_shrink的配置） | 否     | -           |</span><br></pre></td></tr></tbody></table></div></figure>\n\n<hr>\n\n        <h1 id=\"Hexo常用操作命令\">\n          <a href=\"#Hexo常用操作命令\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#Hexo常用操作命令\" class=\"headerlink\" title=\"Hexo常用操作命令\"></a>Hexo常用操作命令</h1>\n      \n        <img class=\"lazyload lazyload-gif\" src=\"/images/loading.gif\" data-src=\"/posts/1899991772/hexo.png\">\n      \n\n<hr>\n\n        <h1 id=\"Hexo-Obsidian高可用搭建说明\">\n          <a href=\"#Hexo-Obsidian高可用搭建说明\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#Hexo-Obsidian高可用搭建说明\" class=\"headerlink\" title=\"Hexo+Obsidian高可用搭建说明\"></a>Hexo+Obsidian高可用搭建说明</h1>\n      \n        <h4 id=\"图片保存\">\n          <a href=\"#图片保存\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#图片保存\" class=\"headerlink\" title=\"图片保存\"></a>图片保存</h4>\n      <p>图片保存在Obsidian有自己的语法，要实现既可以在Ob上预览又可以在博客上显示出来需要一系列的设置</p>\n<ol>\n<li><strong>Ob上安装插件</strong>\n        <img class=\"lazyload lazyload-gif\" src=\"/images/loading.gif\" data-src=\"/posts/1899991772/file-20241021180920049.png\">\n      </li>\n<li><strong>配置Ob相关设置</strong>\n        <img class=\"lazyload lazyload-gif\" src=\"/images/loading.gif\" data-src=\"/posts/1899991772/file-20241021181007212.png\">\n      \n\n        <img class=\"lazyload lazyload-gif\" src=\"/images/loading.gif\" data-src=\"/posts/1899991772/file-20241021181012702.png\">\n      </li>\n<li><strong>安装插件hexo-asset–image</strong></li>\n</ol>\n<figure class=\"highlight plaintext\"><div class=\"table-container\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">npm install hexo-asset-image --save</span><br></pre></td></tr></tbody></table></div></figure>\n\n<ol start=\"4\">\n<li><strong>修改_config.yml</strong><br>修改下列属性为true</li>\n</ol>\n<figure class=\"highlight plaintext\"><div class=\"table-container\"><table><tbody><tr><td class=\"code\"><pre><span class=\"line\">post_asset_folder: true</span><br></pre></td></tr></tbody></table></div></figure>\n\n\n        <h2 id=\"以上步骤完成之后便可以正常使用每次在Ob中保存图片便会生成如下格式路径\">\n          <a href=\"#以上步骤完成之后便可以正常使用每次在Ob中保存图片便会生成如下格式路径\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#以上步骤完成之后便可以正常使用每次在Ob中保存图片便会生成如下格式路径\" class=\"headerlink\" title=\"以上步骤完成之后便可以正常使用每次在Ob中保存图片便会生成如下格式路径\"></a>以上步骤完成之后便可以正常使用<br>每次在Ob中保存图片便会生成如下格式路径<br>\n        <img class=\"lazyload lazyload-gif\" src=\"/images/loading.gif\" data-src=\"/posts/1899991772/file-20241021181834513.png\">\n      </h2>\n      \n        <h1 id=\"Hexo搭建教程\">\n          <a href=\"#Hexo搭建教程\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#Hexo搭建教程\" class=\"headerlink\" title=\"Hexo搭建教程\"></a>Hexo搭建教程</h1>\n      \n        <h5 id=\"知乎教程\">\n          <a href=\"#知乎教程\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#知乎教程\" class=\"headerlink\" title=\"知乎教程\"></a><span class=\"exturl\"><a class=\"exturl__link\" href=\"https://zhuanlan.zhihu.com/p/60578464\">知乎教程</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></h5>\n      \n        <h5 id=\"夜星梦尘\">\n          <a href=\"#夜星梦尘\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#夜星梦尘\" class=\"headerlink\" title=\"夜星梦尘\"></a><span class=\"exturl\"><a class=\"exturl__link\" href=\"https://tech.yemengstar.com/hexo-tutorial-deploy-githubpages-beginner/\">夜星梦尘</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></h5>\n      \n        <h5 id=\"CSDN个性化搭建\">\n          <a href=\"#CSDN个性化搭建\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#CSDN个性化搭建\" class=\"headerlink\" title=\"CSDN个性化搭建\"></a><span class=\"exturl\"><a class=\"exturl__link\" href=\"https://blog.csdn.net/as480133937/article/details/100138838\">CSDN个性化搭建</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></h5>\n      <hr>\n\n        <h1 id=\"编辑器使用转型经验\">\n          <a href=\"#编辑器使用转型经验\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#编辑器使用转型经验\" class=\"headerlink\" title=\"编辑器使用转型经验\"></a>编辑器使用转型经验</h1>\n      <ul>\n<li>Obsidian</li>\n</ul>\n<blockquote>\n<p>适合编辑文本，编辑体验比vscode好<br>缺点是不适合插入图片，无法设置子分类，无法自动生成时间<br>使用简介，各种键入反应快捷</p>\n</blockquote>\n<ul>\n<li>Vscode，</li>\n</ul>\n<blockquote>\n<p>可以插入图片，可以设置子分类<br>缺点是编辑体验不如Obsidian好，预览显示有卡顿</p>\n</blockquote>\n\n        <h1 id=\"压缩插件\">\n          <a href=\"#压缩插件\" class=\"heading-link\"><i class=\"fas fa-link\"></i></a><a href=\"#压缩插件\" class=\"headerlink\" title=\"压缩插件\"></a>压缩插件</h1>\n      <p><span class=\"exturl\"><a class=\"exturl__link\" href=\"https://github.com/chenzhutian/hexo-all-minifier/blob/master/README.md\">MD地址</a><span class=\"exturl__icon\"><i class=\"fas fa-external-link-alt\"></i></span></span></p>\n","categories":["Hexo"],"tags":["Hexo","GithubPages","Obsidian"]},{"title":"我的第一篇博客文章","url":"/posts/2991444807.html","content":"<img class=\"lazyload lazyload-gif\" src=\"/images/loading.gif\" data-src=\"/posts/2991444807/file-20241023082318762.png\">\n      \n\n<p>第一次使用hexo搭建个人博客</p>\n","categories":["随意"]}]